name: Docker CI Release

on:
  pull_request:
    branches: master
  push:
    branches: master

jobs:
  test_hass:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override hass
      -
        name: "Service: Wait"
        run: |
          sleep 15s
      -
        name: "Service: Test"
        run: |
          cd hass
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' hass)"
          [[ "$REPLY" == '"healthy"' ]] || exit 1

  test_pihole:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override pihole
      -
        name: "Service: Wait"
        run: |
          sleep 30s
      -
        name: "Service: Test"
        run: |
          cd pihole
          docker-compose exec -T pihole pihole status
          docker-compose exec -T dnscrypt-proxy dig google.com

  test_netdata:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override netdata
      -
        name: "Service: Wait"
        run: |
          sleep 5s
      -
        name: "Service: Test"
        run: |
          cd netdata
          REPLY="$(docker-compose exec -T netdata netdatacli ping)"
          [[ "$REPLY" == "pong" ]] || exit 1

  test_unifi:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override unifi
      -
        name: "Service: Wait"
        run: |
          sleep 30s
      -
        name: "Service: Test"
        run: |
          cd unifi
          docker-compose exec -T unifi bash /health.sh

  test_unms:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override unms
      -
        name: "Service: Wait"
        run: |
          sleep 300s
      -
        name: "Service: Test"
        run: |
          cd unms
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' unms)"
          [[ "$REPLY" == '"healthy"' ]] || exit 1
