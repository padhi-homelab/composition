name: Docker CI Release

on:
  pull_request:
    branches: master
  push:
    branches: master
  schedule:
  - cron: "0 8 * * *"

jobs:
  test_hass:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override hass
      -
        name: "Service: Wait"
        run: |
          sleep 15s
      -
        name: "Service: Test"
        run: |
          cd hass
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' $(docker-compose ps -q hass))"
          [[ "$REPLY" == '"healthy"' ]] || exit 1

  test_ifm:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override ifm
      -
        name: "Service: Wait"
        run: |
          sleep 15s
      -
        name: "Service: Test"
        run: |
          cd ifm
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' $(docker-compose ps -q ifm))"
          [[ "$REPLY" == '"healthy"' ]] || exit 1
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' $(docker-compose ps -q caddy))"
          [[ "$REPLY" == '"healthy"' ]] || exit 1

  test_netdata:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override netdata
      -
        name: "Service: Wait"
        run: |
          sleep 10s
      -
        name: "Service: Test"
        run: |
          cd netdata
          REPLY="$(docker-compose exec -T netdata netdatacli ping)"
          [[ "$REPLY" == "pong" ]] || exit 1
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' $(docker-compose ps -q caddy))"
          [[ "$REPLY" == '"healthy"' ]] || exit 1

  test_pihole:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override pihole
      -
        name: "Service: Wait"
        run: |
          sleep 30s
      -
        name: "Service: Test"
        run: |
          cd pihole
          docker-compose exec -T dnscrypt-proxy dig google.com
          docker-compose exec -T pihole pihole status
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' $(docker-compose ps -q caddy))"
          [[ "$REPLY" == '"healthy"' ]] || exit 1

  test_tang:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override tang
      -
        name: "Service: Wait"
        run: |
          sleep 60s
      -
        name: "Service: Test"
        run: |
          cd tang
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' $(docker-compose ps -q tang))"
          [[ "$REPLY" == '"healthy"' ]] || exit 1

  test_unifi:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override unifi
      -
        name: "Service: Wait"
        run: |
          sleep 30s
      -
        name: "Service: Test"
        run: |
          cd unifi
          docker-compose exec -T unifi bash /health.sh

  test_unms:
    runs-on: ubuntu-latest
    steps:
      -
        name: "Git: Checkout"
        uses: actions/checkout@v2
      -
        name: "Service: Start"
        run: |
          ./service.sh up --no-override unms
      -
        name: "Service: Wait"
        run: |
          sleep 300s
      -
        name: "Service: Test"
        run: |
          cd unms
          REPLY="$(docker inspect --format '{{json .State.Health.Status}}' $(docker-compose ps -q unms))"
          [[ "$REPLY" == '"healthy"' ]] || exit 1
