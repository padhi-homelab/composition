version: '2.4'

networks:
  internal:
    internal: true
  public:

services:
  netflow:
    container_name: netflow
    hostname: netflow
    image: padhihomelab/unms:netflow-1.2.7
    restart: unless-stopped
    user: "${USER_ID:?}"

    depends_on:
    - postgres
    - rabbitmq
    - redis

    networks:
      - internal
      - public
  
    environment:
      TZ: ${TZ:?}

  nginx:
    container_name: nginx
    hostname: nginx
    image: padhihomelab/unms:nginx-1.2.7
    restart: unless-stopped

    networks:
    - public
    - internal
    volumes:
    - ./data/cert:/cert:rw
    - ./data/firmwares:/www/firmwares:rw

    environment:
      NGINX_UID: ${USER_ID:?}
      TZ: ${TZ:?}

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:9.6-alpine
    restart: unless-stopped

    networks:
    - internal
    volumes:
    - ./config/postgres/create-users.sh:/docker-entrypoint-initdb.d/create-users.sh:ro
    - ./data/postgres:/var/lib/postgresql/data/pgdata:rw

    command: postgres -c deadlock_timeout=5000 -c max_connections=512
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      UNMS_POSTGRES_DB: unms
      UNMS_POSTGRES_SCHEMA: unms
      UNMS_POSTGRES_USER: unms
      UNMS_POSTGRES_PASSWORD: unms
      UCRM_POSTGRES_DB: unms
      UCRM_POSTGRES_SCHEMA: ucrm
      UCRM_POSTGRES_USER: ucrm
      UCRM_POSTGRES_PASSWORD: ucrm
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: ${TZ:?}

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.8-alpine
    restart: unless-stopped

    networks:
    - internal
    volumes:
    - ./data/rabbitmq:/var/lib/rabbitmq:rw

    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '-rabbit channel_max 4096'
      TZ: ${TZ:?}

  redis:
    container_name: redis
    hostname: redis
    image: redis:5.0-alpine
    restart: unless-stopped

    networks:
    - internal
    volumes:
    - ./data/redis:/data/db:rw

    command: redis-server --appendonly yes --dir /data/db/
    environment:
      TZ: ${TZ:?}

  siridb:
    container_name: siridb
    hostname: siridb
    image: padhihomelab/unms:siridb-1.2.7
    restart: unless-stopped

    networks:
    - internal
    volumes:
    - ./data/siridb:/var/lib/siridb:rw

    environment:
      TZ: ${TZ:?}

  ucrm:
    container_name: ucrm
    hostname: ucrm
    image: padhihomelab/unms:ucrm-1.2.7
    restart: unless-stopped

    depends_on:
    - postgres
    - rabbitmq
    - nginx

    networks:
    - public
    - internal
    volumes:
    - ./data/ucrm:/data:rw

    command: server_with_migrate
    environment:
      UNMS_BASE_URL: /v2.1
      UNMS_VERSION: 1.2.7
      TZ: ${TZ:?}

  unms:
    container_name: unms
    hostname: unms
    image: padhihomelab/unms:1.2.7
    restart: unless-stopped

    depends_on:
    - redis
    - siridb
    - postgres
    - rabbitmq
    - nginx
    - ucrm

    networks:
    - public
    - internal
    volumes:
    - ./data:/home/app/unms/data:rw

    cap_add:
    - NET_ADMIN
    environment:
      UNMS_USER_ID: ${USER_ID:?}
      TZ: ${TZ:?}
